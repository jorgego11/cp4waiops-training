"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[4545],{2586:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return u}});var a=n(3366),r=(n(7294),n(4983)),o=n(4295),l=["components"],i={},s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)}},c=s("Accordion"),p=s("AccordionItem"),m=s("InlineNotification"),d={_frontmatter:i},g=o.Z;function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)(g,Object.assign({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A signed certificate is needed on the NGNIX pods for the Slack and Teams integrations."),(0,r.kt)("p",null,"The AutomationUIConfig instance controls the certificates and the NGINX pods that use them."),(0,r.kt)("h2",null,"üöÄ TASK: Create valid Ingress certificates"),(0,r.kt)("a",{href:"https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/3.6.0?topic=manager-starter-installation-cli",target:"_blank"},"üåè Documentation for the Task: nline starter installation of CP4WAIOPS"),(0,r.kt)("p",null,"Create valid Ingress Certificates as described in the Documentation."),(0,r.kt)(c,{mdxType:"Accordion"},(0,r.kt)(p,{title:"üí° Need Help?",mdxType:"AccordionItem"},(0,r.kt)("h2",null,"Patch NetworkPolicy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the following command to patch the NetworkPolicy"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')\n\ncat <<EOF | oc apply -f -\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-all-egress-and-ingress\n  annotations:\n    argocd.argoproj.io/sync-wave: \"3\"\n  namespace: $WAIOPS_NAMESPACE\nspec:\n  egress:\n  - {}\n  ingress:\n  - {}\n  podSelector: {}\n  policyTypes:\n  - Egress\n  - Ingress\nEOF\n")))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the following command to patch the Ingress Certificates"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'PROJECT_CP4WAIOPS=cp4waiops\n\nAUTO_UI_INSTANCE=$(oc get AutomationUIConfig -n ${PROJECT_CP4WAIOPS} --no-headers -o custom-columns=":metadata.name")\n\ningress_pod=$(oc get secrets -n openshift-ingress | grep tls | grep -v router-metrics-certs-default | awk \'{print $1}\')\n\noc get secret -n openshift-ingress -o \'go-template={{index .data "tls.crt"}}\' ${ingress_pod} | base64 -d > cert.crt\noc get secret -n openshift-ingress -o \'go-template={{index .data "tls.key"}}\' ${ingress_pod} | base64 -d > cert.key\noc get secret -n ${PROJECT_CP4WAIOPS} external-tls-secret -o yaml > external-tls-secret.yaml\n\noc patch AutomationUIConfig ${AUTO_UI_INSTANCE} \\\n-n ${PROJECT_CP4WAIOPS} \\\n--type merge \\\n--patch \'{"spec": {"tls": {"caSecret": {"key":"ca.crt", "secretName": "external-tls-secret"}, "certificateSecret": { "secretName": "external-tls-secret"}}}}\'\n\noc create secret generic -n ${PROJECT_CP4WAIOPS} external-tls-secret --from-file=cert.crt=cert.crt --from-file=cert.key=cert.key -o yaml --dry-run=client | oc apply -f -\n\nREPLICAS=$(oc get Deployment/ibm-nginx -n ${PROJECT_CP4WAIOPS} -o jsonpath=\'{.spec.replicas}\')\noc scale Deployment/ibm-nginx --replicas=0 -n ${PROJECT_CP4WAIOPS}\nsleep 3\noc scale Deployment/ibm-nginx --replicas=${REPLICAS} -n ${PROJECT_CP4WAIOPS}\n')))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To check that the nginx Pods are back up, run the following:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk \'{print$1}\')\nwhile :; do clear; echo "Checking..."; echo "Exit with Ctrl-C"; oc get po -n $WAIOPS_NAMESPACE | grep nginx|grep -v ibm-nginx-tester|grep -v setup-nginx-job ; sleep 2; done\n')),(0,r.kt)("p",{parentName:"li"},"This will list the Pods that are Ready."),(0,r.kt)("p",{parentName:"li"},"Wait until you get two pods with ",(0,r.kt)("inlineCode",{parentName:"p"},"1/1")," status"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"ibm-nginx-xxxxx-xxx                                       1/1     Running     0               4h9m\nibm-nginx-xxxxx-xxx                                       1/1     Running     0               4h9m\n")))),(0,r.kt)(m,{kind:"info",mdxType:"InlineNotification"},(0,r.kt)("p",null,"This creates valid certificates for the OpenShift Ingress, so that you can integrate with Slack.")))),(0,r.kt)(m,{kind:"success",mdxType:"InlineNotification"},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"You have successfully finished this Chapter")),(0,r.kt)("p",null,"You are now done with the chapter on Configuring CP4WAIOPS."),(0,r.kt)("p",null,"Please continue to the next chapter to learn how to train the AI Models.")))}u.isMDXComponent=!0},4295:function(e,t,n){n.d(t,{Z:function(){return E}});var a=n(7294),r=n(8650),o=n.n(r),l=n(5444),i=n(9403),s=n(6835),c=n(5900),p=n.n(c),m=function(e){var t,n=e.title,r=e.theme,o=e.tabs,l=void 0===o?[]:o;return a.createElement("div",{className:p()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=l.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===r,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},n)))))},d=function(e){var t=e.relativePagePath,n=e.repository,r=(0,l.useStaticQuery)("1364590287").site.siteMetadata.repository,o=n||r,i=o.baseUrl,s=o.subDirectory,c=i+"/edit/"+o.branch+s+"/src/pages"+t;return i?a.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},g=n(4275),u=n(1721),h=function(e){function t(){return e.apply(this,arguments)||this}return(0,u.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,r=e.slug,i=r.split("/").filter(Boolean).slice(-1)[0],s=n.map((function(e){var t,n=o()(e,{lower:!0,strict:!0}),s=n===i,c=new RegExp(i+"/?(#.*)?$"),m=r.replace(c,n);return a.createElement("li",{key:e,className:p()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},a.createElement(l.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(a.Component),k=h,f=n(2881),P=n(6958),x=n(36),N=function(e){var t=e.date,n=new Date(t);return t?a.createElement(x.X2,{className:"last-modified-date-module--row--XJoYQ"},a.createElement(x.sg,null,a.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},E=function(e){var t=e.pageContext,n=e.children,r=e.location,c=e.Title,p=t.frontmatter,u=void 0===p?{}:p,h=t.relativePagePath,x=t.titleType,E=u.tabs,b=u.title,C=u.theme,y=u.description,w=u.keywords,A=u.date,v=(0,P.Z)().interiorTheme,I=(0,l.useStaticQuery)("2456312558").site.pathPrefix,T=I?r.pathname.replace(I,""):r.pathname,S=E?T.split("/").filter(Boolean).slice(-1)[0]||o()(E[0],{lower:!0}):"",O=C||v;return a.createElement(s.Z,{tabs:E,homepage:!1,theme:O,pageTitle:b,pageDescription:y,pageKeywords:w,titleType:x},a.createElement(m,{title:c?a.createElement(c,null):b,label:"label",tabs:E,theme:O}),E&&a.createElement(k,{title:b,slug:T,tabs:E,currentTab:S}),a.createElement(f.Z,{padded:!0},n,a.createElement(d,{relativePagePath:h}),a.createElement(N,{date:A})),a.createElement(g.Z,{pageContext:t,location:r,slug:T,tabs:E,currentTab:S}),a.createElement(i.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-06-configure-aimanager-06-configure-aimanager-09-mdx-e5ec3d4e10f9b5c9d94e.js.map
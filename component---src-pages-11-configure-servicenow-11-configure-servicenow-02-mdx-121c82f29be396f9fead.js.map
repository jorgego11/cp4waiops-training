{"version":3,"file":"component---src-pages-11-configure-servicenow-11-configure-servicenow-02-mdx-121c82f29be396f9fead.js","mappings":"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","sources":["webpack://example/./src/pages/11-configure-servicenow/11-configure-servicenow-02.mdx","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://example/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://example/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/jorgego/CODE/waiops/nik-automationv3.6/cp4waiops-training/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`üì• STEP: Procure a ServiceNow Developer Instance`}</h2>\n    <p>{`Join the `}<a href=\"https://developer.servicenow.com/dev.do\" target=\"_blank\">{`ServiceNow Developer Program`}</a>{` , login with your credentials and request a Personal Developer Instance (PDI) with `}<strong parentName=\"p\">{`version ‚ÄúParis‚Äù and patch 4 or higher`}</strong>{`. If you get a different version, you can release/return the instance you just got from the top right menu and request a new one. Then it will ask you to choose the version as shown below:`}</p>\n    <p>{`  `}<img parentName=\"p\" {...{\n        \"src\": \"./../images/snow/image-version-select.png\",\n        \"alt\": \"image-version-select\"\n      }}></img></p>\n    <p>{`You can read about PDI `}<a href=\"https://developer.servicenow.com/dev.do#!/guides/quebec/developer-program/pdi-guide/personal-developer-instance-guide-introduction\" target=\"_blank\">{`here`}</a>{`.`}</p>\n    <p>{`Note that your instance will go to sleep after a few hours if not used and if you are inactive for ten or more days the developer instance will be deleted!. You will have two sets of credentials: one for your ServiceNow developer account and another set for the developer instance itself. The ServiceNow developer instance comes loaded with some test data such as open incidents, change requests, etc. `}</p>\n    <h2>{`üì• STEP: Install the WAIOPS App in your ServiceNow Developer Instance`}</h2>\n    <p>{`Customers will typically install the WAIOPS app (or plug-in) from the official `}<a href=\"https://store.servicenow.com/sn_appstore_store.do#!/store/application/632a6d81db102010253148703996197e/1.1.0\" target=\"_blank\">{`ServiceNow App Store`}</a>{`. `}</p>\n    <p>{`In our case, because we have a developer instance, we will have to install it from a GitHub repo. `}</p>\n    <h2>{`üì• STEP: Import app into ServiceNow instance`}</h2>\n    <h4>{`Prepare GitHub access`}</h4>\n    <p>{`Pre-req: Personal access token for Github. `}</p>\n    <p>{`If you don‚Äôt have one, follow the instructions `}<a href=\"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token\" target=\"_blank\"><a parentName=\"p\" {...{\n          \"href\": \"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token\"\n        }}>{`https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token`}</a></a>{`  to create one (no elevated permissions needed for the token).`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Obtain a developer instance for ServiceNow following the instructions from  `}</p>\n        <a href=\"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token\" target=\"_blank\">https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token</a> (this requires a ServiceNow account which can be created as part of the steps - just sign up for a new account). Note: development instances go into hibernation when not used and are decommissined if not used for 10 days.\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Log on to the development instance.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Search for `}<inlineCode parentName=\"p\">{`Credentials`}</inlineCode>{`.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/credentials1.png\",\n          \"alt\": \"Credentials\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select `}<inlineCode parentName=\"p\">{`Credentials`}</inlineCode>{` under `}<inlineCode parentName=\"p\">{`Connections & Credentials`}</inlineCode>{`.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/credentials2.png\",\n          \"alt\": \"Credentials\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select `}<inlineCode parentName=\"p\">{`Basic Authentication`}</inlineCode>{`.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/credentials3.png\",\n          \"alt\": \"Credentials\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enter any name, provide your login email address for Github and as password provide your personal access token. Then click `}<inlineCode parentName=\"p\">{`Submit`}</inlineCode>{`.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/credentials4.png\",\n          \"alt\": \"Credentials\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the Search field, type in `}<inlineCode parentName=\"p\">{`Studio`}</inlineCode>{`. Select `}<inlineCode parentName=\"p\">{`Studio`}</inlineCode>{` under `}<inlineCode parentName=\"p\">{`System Applications`}</inlineCode>{`. This will open the Application Studio in a new tab.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/studio1.png\",\n          \"alt\": \"Studio\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`Select Application`}</inlineCode>{` dialog, click `}<inlineCode parentName=\"p\">{`Import from Source Control`}</inlineCode>{`.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/studio2.png\",\n          \"alt\": \"Studio\"\n        }}></img>\n      </li>\n    </ol>\n    <h4>{`Fork GitHub repository`}</h4>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fork the following repository `}<inlineCode parentName=\"p\">{`https://github.ibm.com/watson-ai4it/servicenow-integration.git`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enter `}<inlineCode parentName=\"p\">{`https://github.ibm.com/<your-repo>/servicenow-integration-fork`}</inlineCode>{` as repository, `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{` as the branch and in the `}<inlineCode parentName=\"p\">{`Credential`}</inlineCode>{` drop-down, select the entry with the credentials that were created in the previous steps.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"./../images/snow/studio3.png\",\n          \"alt\": \"Studio\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click `}<inlineCode parentName=\"p\">{`Import`}</inlineCode>{` to import the source code.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","href","target","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}
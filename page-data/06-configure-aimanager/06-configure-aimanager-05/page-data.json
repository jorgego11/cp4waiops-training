{
    "componentChunkName": "component---src-pages-06-configure-aimanager-06-configure-aimanager-05-mdx",
    "path": "/06-configure-aimanager/06-configure-aimanager-05/",
    "result": {"pageContext":{"frontmatter":{"title":"Configure ELK","date":"2022-11-03T09:57:46.000Z","weight":55},"relativePagePath":"/06-configure-aimanager/06-configure-aimanager-05.mdx","titleType":"page","MdxNode":{"id":"0f2a4cbb-7fd1-56c3-aac6-b848f3662e54","children":[],"parent":"090a00d0-485e-504c-9b19-f0e9e0fe2405","internal":{"content":"---\ntitle: \"Configure ELK\"\ndate: 2022-11-03T10:57:46+01:00\nweight: 55\n---\n\n\n\nELK (Elasticsearch, Logstash, and Kibana) is a suite of tools that function as an application log aggregation tool and its included in the OpenShift Logging library.\nNote that Kibana is a data visualization and exploration tool used for log and time-series analytics, application monitoring, and operational intelligence use cases. \nOpenShift customers that prefer not to buy a commercial log aggregator such as Humio, Splunk, or LogDNA, more than likely will use the OpenShift Logging library that comes out of the box.\nTo have the CP4WAIOps collect logs from the ELK installation that leverages the OpenShift Logging library, you need to define an this ELK integration.\nIn this section you will create the integration with ELK.\n\n\n\n## üöÄ TASK: Create the ELK Integration\n\n<a href=\"https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/3.6.0?topic=connections-elk\" target=\"_blank\" >üåè Documentation for the Task: Creating ELK connections</a>\n\n\nCreate the ELK Integration with the following parameters:\n\n\n```yaml\nELK service URL: \t\tfrom MY_CONFIGURATION.txt\nKibana URL: \t\t\tfrom MY_CONFIGURATION.txt\nAuthentication type: \t\tToken\nToken: \t\t\t\tfrom MY_CONFIGURATION.txt\n\nFilter:\n{\n \"query\": {\n  \"bool\": {\n   \"must\": {\n    \"term\" : { \"kubernetes.namespace_name\" : \"robot-shop\" }\n   }\n  }\n }\n}\n\n\nTimeZone:\t\t\tset to your Timezone\t\nKibana port: \t\t\t443\n\nMapping:\n{ \n\"codec\": \"elk\",\n\"message_field\": \"message\",\n\"log_entity_types\": \"kubernetes.container_image_id, kubernetes.host, kubernetes.pod_name, kubernetes.namespace_name\",\n\"instance_id_field\": \"kubernetes.container_name\",\n\"rolling_time\": 10,\n\"timestamp_field\": \"@timestamp\"\n}\n```\n\n\n\n\n\n\n<Accordion>\n<AccordionItem title=\"üí° Need Help?\">\n\n1. In the `CP4WAIOPS` \"Hamburger\" Menu select `Define`/`Data and tool connections`\n1. Click `Add connection`\n1. Under `ELK`, click on `Add connection`\n1. Click `Connect`\n1. Name it `ELK`\n1. üîé Get the data from the DEMO-UI under the Configuration tab, look for the `2.2 Configure ELK` section.\n(For \"Filter\" and \"Field Mapping\" use the values listed below)\n\n1. Fill out the fields on the first page:\n\n\t![image](./../images/25_elk.png)\n\n\t```yaml\n\tFilter:\n\t\t{\n\t\t\"query\": {\n\t\t\t\"bool\": {\n\t\t\t\t\"must\": {\n\t\t\t\t\t\"term\" : { \"kubernetes.namespace_name\" : \"robot-shop\" }\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t```\n\n1. Click `Test connection`. You should get `Connection successful!`\n\n\t![image](./../images/26_elk.png)\n\n1. Click `Next`\n\n1. Fill out the `Field mapping`:\n\n    ```yaml\n\t{ \n\t\"codec\": \"elk\",\n\t\"message_field\": \"message\",\n\t\"log_entity_types\": \"kubernetes.container_image_id, kubernetes.host, kubernetes.pod_name, kubernetes.namespace_name\",\n\t\"instance_id_field\": \"kubernetes.container_name\",\n\t\"rolling_time\": 10,\n\t\"timestamp_field\": \"@timestamp\"\n\t}\n    ```\n\n1. Click `Next`\n\n\t![image](./../images/27_elk.png)\n\n1. Turn On `Data collection`\n\n1. Select `Live data for continuous AI training and anomaly detection`\n\n1. Click `Done`\n\n1. Make sure that the Data Collection and Connection Status turn green after a few minutes\n\n\t![image](./../images/28_elk.png)\n\n</AccordionItem>\n</Accordion>\n\n","type":"Mdx","contentDigest":"a26b0d974fb824e6c449ebdac7290e88","owner":"gatsby-plugin-mdx","counter":307},"frontmatter":{"title":"Configure ELK","date":"2022-11-03T09:57:46.000Z","weight":55},"exports":{},"rawBody":"---\ntitle: \"Configure ELK\"\ndate: 2022-11-03T10:57:46+01:00\nweight: 55\n---\n\n\n\nELK (Elasticsearch, Logstash, and Kibana) is a suite of tools that function as an application log aggregation tool and its included in the OpenShift Logging library.\nNote that Kibana is a data visualization and exploration tool used for log and time-series analytics, application monitoring, and operational intelligence use cases. \nOpenShift customers that prefer not to buy a commercial log aggregator such as Humio, Splunk, or LogDNA, more than likely will use the OpenShift Logging library that comes out of the box.\nTo have the CP4WAIOps collect logs from the ELK installation that leverages the OpenShift Logging library, you need to define an this ELK integration.\nIn this section you will create the integration with ELK.\n\n\n\n## üöÄ TASK: Create the ELK Integration\n\n<a href=\"https://www.ibm.com/docs/en/cloud-paks/cloud-pak-watson-aiops/3.6.0?topic=connections-elk\" target=\"_blank\" >üåè Documentation for the Task: Creating ELK connections</a>\n\n\nCreate the ELK Integration with the following parameters:\n\n\n```yaml\nELK service URL: \t\tfrom MY_CONFIGURATION.txt\nKibana URL: \t\t\tfrom MY_CONFIGURATION.txt\nAuthentication type: \t\tToken\nToken: \t\t\t\tfrom MY_CONFIGURATION.txt\n\nFilter:\n{\n \"query\": {\n  \"bool\": {\n   \"must\": {\n    \"term\" : { \"kubernetes.namespace_name\" : \"robot-shop\" }\n   }\n  }\n }\n}\n\n\nTimeZone:\t\t\tset to your Timezone\t\nKibana port: \t\t\t443\n\nMapping:\n{ \n\"codec\": \"elk\",\n\"message_field\": \"message\",\n\"log_entity_types\": \"kubernetes.container_image_id, kubernetes.host, kubernetes.pod_name, kubernetes.namespace_name\",\n\"instance_id_field\": \"kubernetes.container_name\",\n\"rolling_time\": 10,\n\"timestamp_field\": \"@timestamp\"\n}\n```\n\n\n\n\n\n\n<Accordion>\n<AccordionItem title=\"üí° Need Help?\">\n\n1. In the `CP4WAIOPS` \"Hamburger\" Menu select `Define`/`Data and tool connections`\n1. Click `Add connection`\n1. Under `ELK`, click on `Add connection`\n1. Click `Connect`\n1. Name it `ELK`\n1. üîé Get the data from the DEMO-UI under the Configuration tab, look for the `2.2 Configure ELK` section.\n(For \"Filter\" and \"Field Mapping\" use the values listed below)\n\n1. Fill out the fields on the first page:\n\n\t![image](./../images/25_elk.png)\n\n\t```yaml\n\tFilter:\n\t\t{\n\t\t\"query\": {\n\t\t\t\"bool\": {\n\t\t\t\t\"must\": {\n\t\t\t\t\t\"term\" : { \"kubernetes.namespace_name\" : \"robot-shop\" }\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t```\n\n1. Click `Test connection`. You should get `Connection successful!`\n\n\t![image](./../images/26_elk.png)\n\n1. Click `Next`\n\n1. Fill out the `Field mapping`:\n\n    ```yaml\n\t{ \n\t\"codec\": \"elk\",\n\t\"message_field\": \"message\",\n\t\"log_entity_types\": \"kubernetes.container_image_id, kubernetes.host, kubernetes.pod_name, kubernetes.namespace_name\",\n\t\"instance_id_field\": \"kubernetes.container_name\",\n\t\"rolling_time\": 10,\n\t\"timestamp_field\": \"@timestamp\"\n\t}\n    ```\n\n1. Click `Next`\n\n\t![image](./../images/27_elk.png)\n\n1. Turn On `Data collection`\n\n1. Select `Live data for continuous AI training and anomaly detection`\n\n1. Click `Done`\n\n1. Make sure that the Data Collection and Connection Status turn green after a few minutes\n\n\t![image](./../images/28_elk.png)\n\n</AccordionItem>\n</Accordion>\n\n","fileAbsolutePath":"/Users/jorgego/CODE/waiops/nik-automationv3.6/cp4waiops-training/src/pages/06-configure-aimanager/06-configure-aimanager-05.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}